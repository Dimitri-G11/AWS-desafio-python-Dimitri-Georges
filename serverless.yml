service: accidentes-service

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.8
  region: us-east-1
  stage: dev
  environment:
    DB_HOST: ${ssm:/db_host}
    DB_USER: ${ssm:/db_user}
    DB_PASSWORD: ${ssm:/db_password}
    DB_NAME: ${ssm:/db_name}
    S3_BUCKET_NAME: ${ssm:/s3_bucket_name}
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "s3:PutObject"
            - "s3:GetObject"
          Resource: "arn:aws:s3:::${ssm:/s3_bucket_name}/*"
        - Effect: "Allow"
          Action:
            - "rds:DescribeDBInstances"
            - "rds:ExecuteStatement"
          Resource: "*"

functions:
  lambda1:
    handler: lambdas/lambda1/handler.handler
    events:
      - http:
          path: lambda1
          method: post
    environment:
      S3_BUCKET_NAME: ${ssm:/s3_bucket_name}

  lambda2:
    handler: lambdas/lambda2/handler.handler
    events:
      - http:
          path: lambda2
          method: post
    environment:
      DB_HOST: ${ssm:/db_host}
      DB_USER: ${ssm:/db_user}
      DB_PASSWORD: ${ssm:/db_password}
      DB_NAME: ${ssm:/db_name}

  stepFunction:
    handler: lambdas/stepFunction/handler.start
    events:
      - http:
          path: startStepFunction
          method: post

resources:
  Resources:
    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${ssm:/s3_bucket_name}

    MyStepFunction:
      Type: AWS::StepFunctions::StateMachine
      Properties:
        StateMachineName: AccidenteFlow
        DefinitionString:
          Fn::Sub: |
            {
              "StartAt": "Lambda1Task",
              "States": {
                "Lambda1Task": {
                  "Type": "Task",
                  "Resource": {"Fn::GetAtt": ["Lambda1LambdaFunction", "Arn"]},
                  "Next": "Lambda2Task"
                },
                "Lambda2Task": {
                  "Type": "Task",
                  "Resource": {"Fn::GetAtt": ["Lambda2LambdaFunction", "Arn"]},
                  "End": true
                }
              }
            }

custom:
  stepFunctions:
    stateMachines:
      accidenteStateMachine:
        definition:
          StartAt: Lambda1Task
          States:
            Lambda1Task:
              Type: Task
              Resource: arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:${self:service}-${self:provider.stage}-lambda1
              Next: Lambda2Task
            Lambda2Task:
              Type: Task
              Resource: arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:${self:service}-${self:provider.stage}-lambda2
              End: true

plugins:
  - serverless-offline
  - serverless-step-functions
