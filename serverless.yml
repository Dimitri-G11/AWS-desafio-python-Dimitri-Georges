service: step-functions-challenge

provider:
  name: aws
  deploymentBucket:
    name: dimitriss2-bucket-ss3
  runtime: python3.9
  region: us-east-1
  environment:
    S3_BUCKET: "dimitris3"
    DB_SECRET_ID: /db-secrets
    DB_PORT: 5432
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "s3:GetObject"
            - "s3:ListBucket"
            - "s3:PutObject"
          Resource:
            - "arn:aws:s3:::${self:provider.environment.S3_BUCKET}"
            - "arn:aws:s3:::${self:provider.environment.S3_BUCKET}/*"
        - Effect: "Allow"
          Action:
            - "ssm:GetParameter"
          Resource: "arn:aws:ssm:${self:provider.region}:*:parameter${self:provider.environment.DB_SECRET_ID}"
        - Effect: "Allow"
          Action:
            - "rds:DescribeDBInstances"
            - "rds:DescribeDBClusters"
            - "rds-data:ExecuteStatement"
          Resource: "*"

functions:
  lambda1:
    handler: lambdas/lambda1/handler.handler
    events:
      - http:
          path: lambda1
          method: post
  lambda2:
    handler: lambdas/lambda2/handler.handler
    vpc:
      securityGroupIds:
        - sg-0250c50609b0a61d5
      subnetIds:
        - subnet-08c5033fba30bb485

resources:
  Resources:
    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.S3_BUCKET}
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true

stepFunctions:
  stateMachines:
    ProcessCSV:
      definition:
        Comment: "Step Function to process CSV files"
        StartAt: Lambda1
        States:
          Lambda1:
            Type: Task
            Resource: !GetAtt Lambda1LambdaFunction.Arn
            Parameters:
              link: "https://dados.antt.gov.br/dataset/ef0171a8-f0df-4817-a4ed-b4ff94d87194/resource/aa60ce3a-033a-4864-81dc-ae32bea866e5/download/demostrativo_acidentes_viaaraucaria.csv"
            Next: Lambda2
          Lambda2:
            Type: Task
            Resource: !GetAtt Lambda2LambdaFunction.Arn
            End: true

plugins:
  - serverless-step-functions
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true
    layer: true
